#include <ESP8266WiFi.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <ESP8266WebServer.h>

// 设置 OLED 屏幕的宽度和高度
#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64

// 定义输出引脚
const int relay1Pin = 5; // D1
const int relay2Pin = 4; // D2

// 定义 OLED 的 I2C 引脚
const int sclPin = 1;
const int sdaPin = 3;

Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);

ESP8266WebServer server(80);

// 存储 IP 地址的字符串
String ipAddressStr;

// 用于滚动的字符串
String scrollText = "You have more beauty to achieve. yaoyang production";
int scrollPosition = 0;

void handleRoot();
void handleRelay1();
void handleRelay2();
void updateOLED();

void setup() {
    Serial.begin(115200);
    WiFi.begin("2.4G", "8888888888");
    while (WiFi.status() != WL_CONNECTED) {
        delay(1000);
        Serial.println("连接 WiFi 中...");
    }
    Serial.println("已连接到 WiFi");

    // 初始化输出引脚为低电平
    pinMode(relay1Pin, OUTPUT);
    digitalWrite(relay1Pin, LOW);
    pinMode(relay2Pin, OUTPUT);
    digitalWrite(relay2Pin, LOW);

    // 设置 I2C 引脚
    Wire.begin(sdaPin, sclPin);

    // 初始化 OLED 屏幕
    if (!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {
        Serial.println(F("SSD1306 分配失败"));
        for (;;);
    }
    display.clearDisplay();
    display.setTextSize(1);
    display.setTextColor(WHITE);

    server.on("/", handleRoot);
    server.on("/relay1", handleRelay1);
    server.on("/relay2", handleRelay2);
    server.begin();

    // 获取并保存 IP 地址
    IPAddress localIP = WiFi.localIP();
    ipAddressStr = "IP:" + String(localIP[0]) + "." +
                   String(localIP[1]) + "." +
                   String(localIP[2]) + "." +
                   String(localIP[3]);
}

void handleRoot() {
    String html = "<html><head><title>Relay Control</title></head><body>"
                  "<p><a href=\"/relay1?state=1\">Turn on Relay 1</a></p>"
                  "<p><a href=\"/relay1?state=0\">Turn off Relay 1</a></p>"
                  "<p><a href=\"/relay2?state=1\">Turn on Relay 2</a></p>"
                  "<p><a href=\"/relay2?state=0\">Turn off Relay 2</a></p>"
                  "</body></html>";
    server.send(200, "text/html", html);
}

void handleRelay1() {
    String state = server.arg("state");
    if (state == "1") {
        digitalWrite(relay1Pin, HIGH);  // 打开继电器1
        Serial.println("Relay 1 turned ON");
    } else if (state == "0") {
        digitalWrite(relay1Pin, LOW);  // 关闭继电器1
        Serial.println("Relay 1 turned OFF");
    }
    server.send(200, "text/plain", "Relay 1 state changed");
}

void handleRelay2() {
    String state = server.arg("state");
    if (state == "1") {
        digitalWrite(relay2Pin, HIGH);  // 打开继电器2
        Serial.println("Relay 2 turned ON");
    } else if (state == "0") {
        digitalWrite(relay2Pin, LOW);  // 关闭继电器2
        Serial.println("Relay 2 turned OFF");
    }
    server.send(200, "text/plain", "Relay 2 state changed");
}

void updateOLED() {
    display.clearDisplay();
    // 固定显示日期时间在最上方
    display.setCursor(0, 0);
    display.println("Relay Control");

    // 固定显示 IP 地址
    display.setCursor(0, 10);
    display.println(ipAddressStr);

    // 显示继电器状态
    display.setCursor(0, 20);
    display.print(digitalRead(relay1Pin) ? "Relay 1: ON  " : "Relay 1: OFF ");
    display.setCursor(0, 30);
    display.print(digitalRead(relay2Pin) ? "Relay 2: ON" : "Relay 2: OFF");

    // 倒数第二行显示滚动的底部文本
    display.setCursor(0, SCREEN_HEIGHT - 8);
    display.print(scrollText.substring(scrollPosition));
    scrollPosition++;
    if (scrollPosition >= scrollText.length()) {
        scrollPosition = 0;
    }

    display.display();
}

void loop() {
    server.handleClient();
    updateOLED();
    delay(1000);
}
